{"version":3,"sources":["components/Searchbar/Searchform/Searchform.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/imagesApi.js","components/App/App.jsx","index.jsx"],"names":["Searchform","state","search","handleChange","value","target","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","type","name","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","key","src","alt","ImageGallery","ButtonLoadMore","loadMore","Modal","closeModal","page","perPage","fetchImages","query","requestParams","axios","get","BASE_URL","incrementPage","resetPage","App","isLoading","error","modalIsOpen","imagesAPI","then","data","hits","catch","finally","handleLoadMoreImages","scrollTo","err","console","handleModalOpen","handleCloseModal","handleKeyPress","code","window","addEventListener","prevProps","prevState","log","removeEventListener","top","document","documentElement","scrollHeight","behavior","message","length","color","height","width","timeout","Button","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c069302f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// import \"./Searchform.css\";\n\nexport default class Searchform extends Component {\n  state = { search: '' };\n\n  handleChange = ( {target: {value}} ) => {\n    this.setState({\n      search: value,\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.search);\n    this.setState({search: ''})\n  }\n  \n\n  render() {\n    const { search } = this.state;\n    return (\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n        <button type=\"submit\" className=\"SearchFormButton\">\n          <span className=\"SearchFormButtonLabel\">Search</span>\n        </button>\n\n        <input\n          name=\"search\"\n          className=\"SearchFormInput\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={this.handleChange}\n          value={search}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Searchform from './Searchform/Searchform';\n\nimport './Searchbar.css';\n\nconst Searchbar = ({ onSubmit }) =>(\n  <header className=\"Searchbar\">\n    <Searchform\n      onSubmit={onSubmit}\n      // onChange={onChange}\n    />\n  </header>\n);\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  // onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './ImageGalleryItem.css';\n\n\nconst ImageGalleryItem = ({ images, onClick }) => (\n  <>\n    {images.map(({ id, webformatURL, largeImageURL }) => (\n      <li className=\"ImageGalleryItem\" key={id}>\n        <img className=\"ImageGalleryItemImage\" src={webformatURL} alt=\"picter\" onClick={() => onClick(largeImageURL)}  />\n      </li>\n    ))}\n  </>\n);\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\n// import './ImageGallery.css';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <>\n    <ul className=\"ImageGallery\">\n      <ImageGalleryItem images={images} onClick={onClick} />\n    </ul>\n  </>\n);\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './ButtonLoadMore.css';\n\nconst ButtonLoadMore = ({ loadMore }) => (\n  <button className=\"Button\" type=\"button\" onClick={loadMore}>Load more</button>\n);\n\nButtonLoadMore.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n\n\nexport default ButtonLoadMore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './Modal.css';\n\nconst Modal = ({ largeImageURL, closeModal }) => (\n  <div className=\"Overlay\" onClick={closeModal}>\n    <div className=\"Modal\">\n      <img src={largeImageURL} alt=\"img\" />\n    </div>\n  </div>\n);\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\nexport default Modal;\n","import axios from 'axios';\n\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst USER_KEY = '?key=16116679-c72078e20d7f40e9b0a227bf4';\n\nexport default {\n  page: 1,\n  perPage: 12,\n  fetchImages(query) {\n    const requestParams = `&q=${query}&page=${this.page}&per_page=${this.perPage}&image_type=all&orientation=horizontal`;\n    return axios.get(BASE_URL + USER_KEY + requestParams);\n  },\n  incrementPage() {\n    this.page += 1;\n  },\n  resetPage() {\n    this.page = 1;\n  },\n};\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport ButtonLoadMore from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport imagesAPI from \"../../services/imagesApi\";\r\n// import   \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    error: null,\r\n    query: '',\r\n    modalIsOpen: false,\r\n    largeImageURL: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchImages()\r\n    window.addEventListener('keydown', this.handleKeyPress)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"componentDidUpdate\")\r\n    \r\n    if(prevState.query !== this.state.query){\r\n      imagesAPI.resetPage();\r\n      imagesAPI.fetchImages(this.state.query)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress)\r\n  }\r\n\r\n  fetchImages = (query = \"\") => {\r\n    imagesAPI.resetPage()\r\n    this.setState({ isLoading: true, query, images: [] });\r\n    \r\n    imagesAPI.fetchImages(query)\r\n      .then(({ data }) => this.setState({ images: [...data.hits] }))\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n  handleLoadMoreImages = () => {\r\n\r\n    imagesAPI.incrementPage();\r\n\r\n    this.setState({ isLoading: true });\r\n    imagesAPI.fetchImages(this.state.query)\r\n      .then(({ data }) =>{\r\n        this.setState((state) => ({ images: [...state.images, ...data.hits] }));\r\n        if (imagesAPI.page > 1) {this.scrollTo()}\r\n      })\r\n      .catch((err) => console.error(err))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n  scrollTo () {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n  handleModalOpen = (src) => {\r\n    this.setState({\r\n      modalIsOpen: true,\r\n      largeImageURL: src,\r\n    })\r\n  }\r\n  handleCloseModal = (e) => {\r\n    if(e.target.className === 'Overlay') {\r\n      this.closeModal()\r\n    }\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.code === \"Escape\") this.closeModal();\r\n  };\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalIsOpen: false,\r\n      largeImageURL: '',\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { images, isLoading, error, modalIsOpen, largeImageURL } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.fetchImages} />\r\n        {error && <p>Whoops, somthing went wrong: {error.message}</p>}\r\n        {images.length > 0 && <ImageGallery images={images} onClick={this.handleModalOpen}  />}\r\n        {isLoading && (\r\n          <div className=\"loader\">\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\r\n          </div>\r\n        )}\r\n        {images.length > 0 && <ButtonLoadMore  loadMore={this.handleLoadMoreImages} />}\r\n        {!!modalIsOpen && <Modal largeImageURL={largeImageURL} closeModal={this.handleCloseModal}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}